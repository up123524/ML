from statistics import mean
import numpy as np
import pandas as pd

from sklearn.metrics import mean_squared_error
def rmse(y_true, y_pred):
    return np.sqrt(mean_squared_error(y_true, y_pred))

path_train="/Users/umar/Documents/practise datasets/house-prices-advanced-regression-techniques/train.csv"
train_df=pd.read_csv(path_train)
path_test= "/Users/umar/Documents/practise datasets/house-prices-advanced-regression-techniques/test.csv"
test_df=pd.read_csv(path_test)

train_df.drop(train_df[train_df["GrLivArea"]>4000].index, inplace=True)

test_df.loc[666,"GarageQual"]="TA"
test_df.loc[666,"GarageCond"]="TA"
test_df.loc[666,"GarageFinish"]="Unf"
test_df.loc[666,"GarageYrBlt"]="1980"

test_df.loc[1116, "GarageType"]=np.nan

lot_frontage_by_neighborhood=train_df["LotFrontage"].groupby(train_df["Neighborhood"])

from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()

def factorize(df, factor_df, column, fill_na=None):
    factor_df[column]=df[column]
    if fill_na is not None:
        factor_df[column].fillna(fill_na, inplace=True)
        le.fit(factor_df[column].unique())
        factor_df[column]=le.transform(factor_df[column])
        return factor_df

def munge(df):
    all_df = pd.DataFrame(index = df.index)
   
    all_df["LotFrontage"] = df["LotFrontage"]   
    for key, group in lot_frontage_by_neighborhood:
        idx = (df["Neighborhood"] == key) & (df["LotFrontage"].isnull())
        all_df.loc[idx, "LotFrontage"] = group.median()    

    all_df["LotArea"] = df["LotArea"]

    all_df["MasVnrArea"] = df["MasVnrArea"]
    all_df["MasVnrArea"].fillna(0, inplace=True)
   
    all_df["BsmtFinSF1"] = df["BsmtFinSF1"]
    all_df["BsmtFinSF1"].fillna(0, inplace=True)

    all_df["BsmtFinSF2"] = df["BsmtFinSF2"]
    all_df["BsmtFinSF2"].fillna(0, inplace=True)

    all_df["BsmtUnfSF"] = df["BsmtUnfSF"]
    all_df["BsmtUnfSF"].fillna(0, inplace=True)

    all_df["TotalBsmtSF"] = df["TotalBsmtSF"]
    all_df["TotalBsmtSF"].fillna(0, inplace=True)

    all_df["1stFlrSF"] = df["1stFlrSF"]
    all_df["2ndFlrSF"] = df["2ndFlrSF"]
    all_df["GrLivArea"] = df["GrLivArea"]
    
    all_df["GarageArea"] = df["GarageArea"]
    all_df["GarageArea"].fillna(0, inplace=True)

    all_df["WoodDeckSF"] = df["WoodDeckSF"]
    all_df["OpenPorchSF"] = df["OpenPorchSF"]
    all_df["EnclosedPorch"] = df["EnclosedPorch"]
    all_df["3SsnPorch"] = df["3SsnPorch"]
    all_df["ScreenPorch"] = df["ScreenPorch"]
    
    all_df["BsmtFullBath"] = df["BsmtFullBath"]
    all_df["BsmtFullBath"].fillna(0, inplace=True)

    all_df["BsmtHalfBath"] = df["BsmtHalfBath"]
    all_df["BsmtHalfBath"].fillna(0, inplace=True)

    all_df["FullBath"] = df["FullBath"] 
    all_df["HalfBath"] = df["HalfBath"] 
    all_df["BedroomAbvGr"] = df["BedroomAbvGr"] 
    all_df["KitchenAbvGr"] = df["KitchenAbvGr"] 
    all_df["TotRmsAbvGrd"] = df["TotRmsAbvGrd"] 
    all_df["Fireplaces"] = df["Fireplaces"] 

    all_df["GarageCars"] = df["GarageCars"]
    all_df["GarageCars"].fillna(0, inplace=True)

    all_df["CentralAir"] = (df["CentralAir"] == "Y") * 1.0
   
    all_df["OverallQual"] = df["OverallQual"]
    all_df["OverallCond"] = df["OverallCond"]

    qual_dict = {None: 0, "Po": 1, "Fa": 2, "TA": 3, "Gd": 4, "Ex": 5}
    all_df["ExterQual"] = df["ExterQual"].map(qual_dict).astype(int)
    all_df["ExterCondl"] = df["ExterCond"].map(qual_dict).astype(int)
    all_df["BsmtQual"] = df["BsmtQual"].map(qual_dict).astype(int)
    all_df["BsmtCond"] = df["BsmtCond"].map(qual_dict).astype(int)
    all_df["HeatingQC"] = df["HeatingQC"].map(qual_dict).astype(int)
    all_df["KitchenQual"] = df["KitchenQual"].map(qual_dict).astype(int)
    all_df["FireplaceQu"] = df["FireplaceQu"].map(qual_dict).astype(int)
    all_df["GarageQual"] = df["GarageQual"].map(qual_dict).astype(int)
    all_df["GarageCond"] = df["GarageCond"].map(qual_dict).astype(int)

    all_df["BsmtExposure"]=df["BsmtExposure"].map({None:0,"No":1,"Mn":2,"Av":3, "Gd":4}).astype(int)

    bsmt_fin_dict={None:0,"Unf":1, "LwQ":2, "Rec": 3, "BLQ": 4, "ALQ": 5, "GLQ": 6}
    all_df["BsmtFinType1"]=df["BsmtFinType1"].map(bsmt_fin_dict).astype(int)
    all_df["BsmtFinType2"]=df["BsmtFinType2"].map(bsmt_fin_dict).astype(int)

    all_df['Functional']=df["Functional"].map(
        {None:0, "Sal": 1, "Sev": 2, "Maj2": 3, "Maj1": 4, "Mod": 5, "Min2": 6, "Min1": 7, "Typ": 8}}).astype(int)
    
    all_df["GarageFinish"]=df["GarageFinish"].map({None: 0, "Unf": 1, "RFn": 2, "Fin": 3}).astype(int)

    all_df["Fence"] = df["Fence"].map(
        {None: 0, "MnWw": 1, "GdWo": 2, "MnPrv": 3, "GdPrv": 4}).astype(int)
    
    all_df["MoSold"]=df["MoSold"]
    all_df["YrSold"]=df["YrSold"]

    all_df["LowQualFinSF"]=df["LowQualFinSF"]
    all_df["MiscVal"]=df["MiscVal"]

    all_df["PoolQC"]=df["PoolQC"].map(qual_dict).astype(int)

    all_df["PoolArea"]=df["PoolArea"]
    all_df["PoolArea"].fillna(0,intype=True)

    all_df = factorize(df, all_df, "MSSubClass")
    all_df = factorize(df, all_df, "MSZoning", "RL")
    all_df = factorize(df, all_df, "LotConfig")
    all_df = factorize(df, all_df, "Neighborhood")
    all_df = factorize(df, all_df, "Condition1")
    all_df = factorize(df, all_df, "BldgType")
    all_df = factorize(df, all_df, "HouseStyle")
    all_df = factorize(df, all_df, "RoofStyle")
    all_df = factorize(df, all_df, "Exterior1st", "Other")
    all_df = factorize(df, all_df, "Exterior2nd", "Other")
    all_df = factorize(df, all_df, "MasVnrType", "None")
    all_df = factorize(df, all_df, "Foundation")
    all_df = factorize(df, all_df, "SaleType", "Oth")
    all_df = factorize(df, all_df, "SaleCondition")

    all_df["IsRegularLotShape"]=(df["IsRegularLotShape"]=="Reg")*1

    all_df["IsLandlevel"]=(df["LandContour"]=="Lv1")*1
    all_df["IsSlopeGentle"]=(df["LandSlope"]=="Gt1")*1
    all_df["IsSElectricalSBrkr"]=(df["Electrical"]=="Sbrkr")*1
    all_df["IsGarageDetached"]=(df["GarageType"]=="Detachd")*1
    all_df["IsPavedDrive"]=(df["PavedDrive"]=="Y")*1
    all_df["HasShed"]=(df["MiscFeature"]=="Shed")*1
    all_df["Remodeled"]=(df["YearRemodAss"] != df["YearBuilt"])*1
    all_df["VeryNewHouse"]=(df["YearBuilt"] == df["YearSold"])*1

    all_df["Has2ndFloor"]==(all_df["2ndFlrSF"]==0)*1
    all_df["HasMasVnr"]==(all_df["MasVnrArea"]==0)*1
    all_df["HasWoodDeck"]==(all_df["WoodDeckSF"]==0)*1\
    all_df["HasOpenPorch"]==(all_df["OpenPorchSF"]==0)*1
    all_df["HasEnclosedPorch"]==(all_df["EnclosedPorch"]==0)*1
    all_df["Has3SsnPorch"]==(all_df["3SsnPorch"]==0)*1
    all_df["HasScreenPorch"]==(all_df["ScreenPorch"]==0)*1
    




    

